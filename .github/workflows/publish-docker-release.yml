name: "Publish Docker Image"

on:
  push:
    tags:
      - "v*"
      - "*-prerelease*"

env:
  GHCR_REGISTRY: ghcr.io
  BUILD_ARGS: VARIANT=latest

jobs:
  build-docker-image:
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            "${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}"
            "${{ env.GHCR_REGISTRY }}/${{ github.repository }}"
          tags: type=semver,pattern={{version}}

      - name: Build & Push Latest
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          target: sshd
          labels: ${{ env.LABELS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          platforms: linux/arm/v7,linux/arm64/v8,linux/amd64
          build-args: ${{ env.BUILD_ARGS }}
          outputs: "type=tar,dest=$(PWD)/out/artifacts.tar"
          pull: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Build & Save Tarball
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          target: sshd
          labels: ${{ env.LABELS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: ${{ env.BUILD_ARGS }}
          outputs: "type=tar,dest=$(PWD)/out/artifacts.tar"
          pull: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Extract SSH Keys
        id: extract_ssh_keys
        run: |
          mkdir -p out/ssh-keys
          tar -xvf out/artifacts.tar -C out/ssh-keys

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      # - name: Extract SSH Keys to Local Directory
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     target: export_keys
      #     cache-from: "type=local,src=$(PWD)/cache"
      #     platforms: linux/arm/v7,linux/arm64/v8,linux/amd64
      #     build-args: ${{ env.BUILD_ARGS }}
      #     outputs: "type=docker,dest=$(PWD)/out/artifacts.tar"
      #     pull: false
      #     push: false

      - uses: bacongobbler/azure-blob-storage-upload@v2.0.1
        with:
          source_dir: "$(PWD)/out/sh-keys"
          container_name: docker-alpine-sshd-artifacts
          connection_string: ${{ secrets.STORAGE_CONNECTION_STRING }}
          extra_args: '--pattern *.tar'
          sync: false
